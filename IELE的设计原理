IELE作为一个统一的，更低层次的平台，用于翻译和执行高级语言的智能合约。

IELE相对于LLVM设计的差异

#1.   类型系统

不同于LLVM支持整形、浮点型有限精度。

IELE支持任意精度，但目前只支持整形。足以描述EVM，未来支持类似LLVM的聚合类型如数组、结构体以及高级函数类型。

#2.  SSA

IELE寄存器非SSA形式，即其可以多次分配而不需要phi节点。

其旨在支持智能合约的解释性语言。为减少程序的gas消耗，尽量少的使用寄存器。这亦即表明与LLVM  SSA的不同之处。

生成IELE的编译器仍然可以在内部使用SSA IELE便于优化程序，但在最终的IELE程序或者手写代码中不会强制转换为SSA来优化寄存器的使用。

#3.  控制流

LLVM对BB块结构的约束，代码被组织成包含显式、静态化的后继／前驱最大BB块控制流图(CFG)。

IELE会弱化这个约束，维持静态label作为唯一允许的跳转地址，同时允许执行一个BB块到另一个BB的fall-through。

而LLVM是BB块的第一条指令只能通过跳转到达，而且每一个BB块最后一条指令只能是控制流指令。

弱化这个约束的目的是，减少IELE程序的代码体积。因为LLVM程序中的这些约束会增加额外的分支指令。

#4.  位移

由于IELE是任意精度的有符号整型，因此不用shr/shl指令，而是采用带符号的位移量来表示位移。

